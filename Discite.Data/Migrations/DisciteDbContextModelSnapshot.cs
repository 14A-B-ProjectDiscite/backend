// <auto-generated />
using System;
using Discite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Discite.Data.Migrations
{
    [DbContext(typeof(DisciteDbContext))]
    partial class DisciteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Discite.Data.Models.ArtifactModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("Power")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("artifact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Damage Up",
                            Power = 3f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Attack Speed Up",
                            Power = 3f
                        },
                        new
                        {
                            Id = 3,
                            Name = "Explosion Radius Up",
                            Power = 3f
                        },
                        new
                        {
                            Id = 4,
                            Name = "Movement Speed Up",
                            Power = 3f
                        },
                        new
                        {
                            Id = 5,
                            Name = "Double Shot",
                            Power = 3f
                        },
                        new
                        {
                            Id = 6,
                            Name = "Max Health Up",
                            Power = 3f
                        });
                });

            modelBuilder.Entity("Discite.Data.Models.EnemyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Damage")
                        .HasColumnType("float");

                    b.Property<float>("Health")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("Speed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("enemy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 10f,
                            Health = 20f,
                            Name = "Baby Bat",
                            Speed = 0.7f
                        },
                        new
                        {
                            Id = 2,
                            Damage = 25f,
                            Health = 5f,
                            Name = "Juvenile Bat",
                            Speed = 1f
                        },
                        new
                        {
                            Id = 3,
                            Damage = 20f,
                            Health = 35f,
                            Name = "Adult Bat",
                            Speed = 1.5f
                        },
                        new
                        {
                            Id = 4,
                            Damage = 10f,
                            Health = 60f,
                            Name = "Bat Queen",
                            Speed = 0.5f
                        });
                });

            modelBuilder.Entity("Discite.Data.Models.RunArtifactModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArtifactId")
                        .HasColumnType("int");

                    b.Property<int>("Picked")
                        .HasColumnType("int");

                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtifactId");

                    b.HasIndex("RunId");

                    b.ToTable("run_artifact");
                });

            modelBuilder.Entity("Discite.Data.Models.RunEnemyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Deaths")
                        .HasColumnType("int");

                    b.Property<int>("EnemyId")
                        .HasColumnType("int");

                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.Property<int>("Seen")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnemyId");

                    b.HasIndex("RunId");

                    b.ToTable("run_enemy");
                });

            modelBuilder.Entity("Discite.Data.Models.RunModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("run");
                });

            modelBuilder.Entity("Discite.Data.Models.RunWeaponModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Picked")
                        .HasColumnType("int");

                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RunId");

                    b.HasIndex("WeaponId");

                    b.ToTable("run_weapon");
                });

            modelBuilder.Entity("Discite.Data.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("Discite.Data.Models.WeaponModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Damage")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("Speed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("weapon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 3f,
                            Name = "Assault Rifle",
                            Speed = 1.5f
                        },
                        new
                        {
                            Id = 2,
                            Damage = 4f,
                            Name = "Anti Matter Rifle",
                            Speed = 1f
                        },
                        new
                        {
                            Id = 3,
                            Damage = 6f,
                            Name = "Plasma Pistol",
                            Speed = 0.7f
                        },
                        new
                        {
                            Id = 4,
                            Damage = 1f,
                            Name = "Singularity Blaster",
                            Speed = 3f
                        });
                });

            modelBuilder.Entity("Discite.Data.Models.RunArtifactModel", b =>
                {
                    b.HasOne("Discite.Data.Models.ArtifactModel", "Artifact")
                        .WithMany("Runs")
                        .HasForeignKey("ArtifactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discite.Data.Models.RunModel", "Run")
                        .WithMany("Artifacts")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artifact");

                    b.Navigation("Run");
                });

            modelBuilder.Entity("Discite.Data.Models.RunEnemyModel", b =>
                {
                    b.HasOne("Discite.Data.Models.EnemyModel", "Enemy")
                        .WithMany("Runs")
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discite.Data.Models.RunModel", "Run")
                        .WithMany("Enemies")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enemy");

                    b.Navigation("Run");
                });

            modelBuilder.Entity("Discite.Data.Models.RunModel", b =>
                {
                    b.HasOne("Discite.Data.Models.UserModel", "User")
                        .WithMany("Runs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Discite.Data.Models.RunWeaponModel", b =>
                {
                    b.HasOne("Discite.Data.Models.RunModel", "Run")
                        .WithMany("Weapons")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discite.Data.Models.WeaponModel", "Weapon")
                        .WithMany("Runs")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Run");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("Discite.Data.Models.ArtifactModel", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("Discite.Data.Models.EnemyModel", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("Discite.Data.Models.RunModel", b =>
                {
                    b.Navigation("Artifacts");

                    b.Navigation("Enemies");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("Discite.Data.Models.UserModel", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("Discite.Data.Models.WeaponModel", b =>
                {
                    b.Navigation("Runs");
                });
#pragma warning restore 612, 618
        }
    }
}
